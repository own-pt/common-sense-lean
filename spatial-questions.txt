This is a copy from: github.com/ontologyportal/sumo/blob/master/tests/SpatialQs.txt

;; Spatial reasoning problems
;; starting with word problems, then later coding the formal query and solution in SUMO

(1), (2), (13) are from https://www.cosy.informatik.uni-bremen.de/sites/default/files/ByrneJohnson-Laird89.pdf

(1) A is on the right of B
    C is on the left of B
    Hence, A is on the right of C

(orientation A B Right)
(orientation C B Left)

need to add to SUMO:

(=>
  (and
    (orientation ?X ?Y ?R)
    (orientation ?Y ?Z ?R))
  (orientation ?X ?Z ?R))

proof will involve

(<=>
    (orientation ?OBJ1 ?OBJ2 Right)
    (orientation ?OBJ2 ?OBJ1 Left))

query: (orientation A C Right)

proof: (over tinySUMO.kif)

1. (not (orientation A C Right)) [] negated_conjecture

2. (forall (?VAR1 ?VAR2 ?VAR3 ?VAR4) (=> (and (orientation ?VAR3 ?VAR4 ?VAR1) (orientation ?VAR2 ?VAR3 ?VAR1)) (orientation ?VAR2 ?VAR4 ?VAR1))) [] kb_SUMO_2

3. (forall (?VAR1 ?VAR2 ?VAR3 ?VAR4) (or (orientation ?VAR2 ?VAR4 ?VAR1) (not (orientation ?VAR3 ?VAR4 ?VAR1)) (not (orientation ?VAR2 ?VAR3 ?VAR1)))) [2] ennf_transformation

4. (forall (?VAR1 ?VAR2 ?VAR3 ?VAR4) (or (or (orientation ?VAR2 ?VAR4 ?VAR1) (not (orientation ?VAR3 ?VAR4 ?VAR1))) (not (orientation ?VAR2 ?VAR3 ?VAR1)))) [3] flattening

5. (forall (?VAR1 ?VAR2 ?VAR3 ?VAR4) (or (or (orientation ?VAR4 ?VAR3 ?VAR2) (not (orientation ?VAR1 ?VAR3 ?VAR2))) (not (orientation ?VAR4 ?VAR1 ?VAR2)))) [4] cnf_transformation

6. (forall (?VAR1) (or (not (orientation ?VAR1 C Right)) (not (orientation A ?VAR1 Right)))) [1, 5] resolution

7. (orientation A B Right) [] kb_SUMO_114

8. (not (orientation B C Right)) [6, 7] resolution

9. (forall (?VAR1 ?VAR2) (and (=> (orientation ?VAR2 ?VAR1 Left) (orientation ?VAR1 ?VAR2 Right)) (=> (orientation ?VAR1 ?VAR2 Right) (orientation ?VAR2 ?VAR1 Left)))) [] kb_SUMO_1

10. (forall (?VAR1 ?VAR2) (and (or (orientation ?VAR1 ?VAR2 Right) (not (orientation ?VAR2 ?VAR1 Left))) (or (orientation ?VAR2 ?VAR1 Left) (not (orientation ?VAR1 ?VAR2 Right))))) [9] ennf_transformation

11. (forall (?VAR1 ?VAR2) (or (orientation ?VAR1 ?VAR2 Right) (not (orientation ?VAR2 ?VAR1 Left)))) [10] cnf_transformation

12. (not (orientation C B Left)) [8, 11] resolution

13. (orientation C B Left) [] kb_SUMO_115

14. false [12, 13] subsumption_resolution

-------------------------------------------------------------------


(2) If x is on the right of y, and z is on the left of y, then x is on the right of z

(orientation X Y Right)
(orientation Z Y Left)

(<=>
  (orientation ?OBJ1 ?OBJ2 Right)
  (orientation ?OBJ2 ?OBJ1 Left))

We may need to add:

(=>
  (and
    (orientation ?X ?Y Right)
    (orientation ?Z ?Y Left))
  (orientation ?X ?Z Right))

query: (orientation X Z Right)

proof: (with tinySUMO)

1. (not (orientation X Z Right)) [] negated_conjecture

2. (forall (?VAR1 ?VAR2 ?VAR3) (=> (and (orientation ?VAR3 ?VAR2 Left) (orientation ?VAR1 ?VAR2 Right)) (orientation ?VAR1 ?VAR3 Right))) [] kb_SUMO_3

3. (forall (?VAR1 ?VAR2 ?VAR3) (or (orientation ?VAR1 ?VAR3 Right) (not (orientation ?VAR3 ?VAR2 Left)) (not (orientation ?VAR1 ?VAR2 Right)))) [2] ennf_transformation

4. (forall (?VAR1 ?VAR2 ?VAR3) (or (or (orientation ?VAR1 ?VAR3 Right) (not (orientation ?VAR3 ?VAR2 Left))) (not (orientation ?VAR1 ?VAR2 Right)))) [3] flattening

5. (forall (?VAR1 ?VAR2 ?VAR3) (or (or (orientation ?VAR2 ?VAR1 Right) (not (orientation ?VAR1 ?VAR3 Left))) (not (orientation ?VAR2 ?VAR3 Right)))) [4] cnf_transformation

6. (forall (?VAR1) (or (not (orientation Z ?VAR1 Left)) (not (orientation X ?VAR1 Right)))) [1, 5] resolution

7. (orientation Z Y Left) [] kb_SUMO_118

8. (not (orientation X Y Right)) [6, 7] resolution

9. (orientation X Y Right) [] kb_SUMO_117

10. false [8, 9] subsumption_resolution

-------------------------------------------------------------------

(3) John is in his house.  John's house is in San Jose.  Is John in San Jose?

(subclass City Physical)
(instance JohnsHouse Physical)
(instance John Physical)
(instance SanJose City)
(orientation John JohnsHouse Inside)
(located JohnsHouse SanJose)
(instance located TransitiveRelation)

from SUMO:

(=>
  (instance ?R TransitiveRelation)
  (=>
    (and
      (?R ?A ?B)
      (?R ?B ?C))
    (?R ?A ?C)))

add to SUMO:

(=>
    (orientation ?OBJ1 ?OBJ2 Inside)
    (located ?OBJ1 ?OBJ2))


query: (located John SanJose)

proof:

1. (instance located TransitiveRelation) [] kb_SUMO_107

2. (forall (?VAR1 ?VAR2 ?VAR3)
  (=>
    (and
      (and
        (instance ?VAR3 Physical)
        (instance ?VAR2 Physical))
      (instance ?VAR1 Physical))
    (=>
      (instance located TransitiveRelation)
      (=>
        (and
          (located ?VAR2 ?VAR3)
          (located ?VAR1 ?VAR2))
        (located ?VAR1 ?VAR3))))) [] kb_SUMO_7

3. (forall (?VAR1 ?VAR2 ?VAR3)
  (or
    (or
      (or
        (located ?VAR1 ?VAR3)
        (not
          (located ?VAR2 ?VAR3))
        (not
          (located ?VAR1 ?VAR2)))
      (not
        (instance located TransitiveRelation)))
    (or
      (not
        (instance ?VAR3 Physical))
      (not
        (instance ?VAR2 Physical)))
    (not
      (instance ?VAR1 Physical)))) [2] ennf_transformation

4. (forall (?VAR1 ?VAR2 ?VAR3)
  (or
    (or
      (or
        (or
          (or
            (or
              (located ?VAR1 ?VAR3)
              (not
                (located ?VAR2 ?VAR3)))
            (not
              (located ?VAR1 ?VAR2)))
          (not
            (instance located TransitiveRelation)))
        (not
          (instance ?VAR3 Physical)))
      (not
        (instance ?VAR2 Physical)))
    (not
      (instance ?VAR1 Physical)))) [3] flattening

5. (forall (?VAR1 ?VAR2 ?VAR3)
  (or
    (or
      (or
        (or
          (or
            (or
              (located ?VAR2 ?VAR1)
              (not
                (located ?VAR3 ?VAR1)))
            (not
              (located ?VAR2 ?VAR3)))
          (not
            (instance located TransitiveRelation)))
        (not
          (instance ?VAR1 Physical)))
      (not
        (instance ?VAR3 Physical)))
    (not
      (instance ?VAR2 Physical)))) [4] cnf_transformation

6. (forall (?VAR1 ?VAR2 ?VAR3)
  (or
    (or
      (or
        (or
          (or
            (located ?VAR2 ?VAR1)
            (not
              (instance ?VAR3 Physical)))
          (not
            (located ?VAR2 ?VAR3)))
        (not
          (located ?VAR3 ?VAR1)))
      (not
        (instance ?VAR2 Physical)))
    (not
      (instance ?VAR1 Physical)))) [1, 5] global_subsumption

7. (not
  (located John SanJose)) [] negated_conjecture

8. (forall (?VAR1)
  (or
    (or
      (or
        (or
          (not
            (instance ?VAR1 Physical))
          (not
            (located John ?VAR1)))
        (not
          (located ?VAR1 SanJose)))
      (not
        (instance John Physical)))
    (not
      (instance SanJose Physical)))) [6, 7] resolution

9. (forall (?VAR1)
  (or
    (or
      (or
        (not
          (instance ?VAR1 Physical))
        (not
          (located John ?VAR1)))
      (not
        (located ?VAR1 SanJose)))
    (not
      (instance SanJose Physical)))) [8] subsumption_resolution

10. (instance SanJose Physical) [] kb_SUMO_57

11. (forall (?VAR1)
  (or
    (or
      (not
        (located John ?VAR1))
      (not
        (instance ?VAR1 Physical)))
    (not
      (located ?VAR1 SanJose)))) [9, 10] subsumption_resolution

12. (forall (?VAR1 ?VAR2)
  (=>
    (and
      (instance ?VAR2 Physical)
      (instance ?VAR1 Physical))
    (=>
      (orientation ?VAR1 ?VAR2 Inside)
      (located ?VAR1 ?VAR2)))) [] kb_SUMO_9

13. (forall (?VAR1 ?VAR2)
  (or
    (or
      (located ?VAR1 ?VAR2)
      (not
        (orientation ?VAR1 ?VAR2 Inside)))
    (not
      (instance ?VAR2 Physical))
    (not
      (instance ?VAR1 Physical)))) [12] ennf_transformation

14. (forall (?VAR1 ?VAR2)
  (or
    (or
      (or
        (located ?VAR1 ?VAR2)
        (not
          (orientation ?VAR1 ?VAR2 Inside)))
      (not
        (instance ?VAR2 Physical)))
    (not
      (instance ?VAR1 Physical)))) [13] flattening

15. (forall (?VAR1)
  (or
    (or
      (or
        (or
          (not
            (instance ?VAR1 Physical))
          (not
            (located ?VAR1 SanJose)))
        (not
          (orientation John ?VAR1 Inside)))
      (not
        (instance ?VAR1 Physical)))
    (not
      (instance John Physical)))) [11, 14] resolution

16. (forall (?VAR1)
  (or
    (or
      (or
        (not
          (instance ?VAR1 Physical))
        (not
          (located ?VAR1 SanJose)))
      (not
        (orientation John ?VAR1 Inside)))
    (not
      (instance John Physical)))) [15] duplicate_literal_removal

17. (instance John Physical) [] kb_SUMO_33

18. (forall (?VAR1)
  (or
    (or
      (not
        (orientation John ?VAR1 Inside))
      (not
        (located ?VAR1 SanJose)))
    (not
      (instance ?VAR1 Physical)))) [16, 17] subsumption_resolution

19. (orientation John JohnsHouse Inside) [] kb_SUMO_131

20. (or
  (not
    (located JohnsHouse SanJose))
  (not
    (instance JohnsHouse Physical))) [18, 19] resolution

21. (located JohnsHouse SanJose) [] kb_SUMO_128

22. (not
  (instance JohnsHouse Physical)) [20, 21] subsumption_resolution

23. (instance JohnsHouse Physical) [] kb_SUMO_37

24. false [22, 23] subsumption_resolution

-------------------------------------------------------------------

 (4) John is carrying a vase.  There is a flower in the vase.  Is John carrying a flower?

(exists (?C ?V ?F)
  (and
    (instance ?C Carrying)
    (objectTransferred ?C ?V)
    (agent ?C John)
    (instance ?F Flower)
    (instance ?V Container)
    (orientation ?F ?V Inside)))

add to SUMO:

(=>
  (and
    (instance ?T Transfer)
    (objectTransferred ?T ?O)
    (orientation ?O ?O2 Inside))
  (objectTransferred ?T ?O2))

(=>
  (and
    (instance ?T Transfer)
    (objectTransferred ?T ?O)
    (orientation ?O ?O2 On))
  (objectTransferred ?T ?O2))

query:
(and
  (instance ?C Carrying)
  (agent ?C John)
  (instance ?F Flower)
  (objectTransferred ?C ?F))

proof:

1. (forall (?VAR1 ?VAR2 ?VAR3)
  (=>
    (and
      (and
        (orientation ?VAR2 ?VAR1 Inside)
        (objectTransferred ?VAR3 ?VAR1))
      (instance ?VAR3 Transfer))
    (objectTransferred ?VAR3 ?VAR2))) [] kb_SUMO_2

2. (forall (?VAR1 ?VAR2 ?VAR3)
  (or
    (objectTransferred ?VAR3 ?VAR2)
    (or
      (not
        (orientation ?VAR2 ?VAR1 Inside))
      (not
        (objectTransferred ?VAR3 ?VAR1)))
    (not
      (instance ?VAR3 Transfer)))) [1] ennf_transformation

3. (forall (?VAR1 ?VAR2 ?VAR3)
  (or
    (or
      (or
        (objectTransferred ?VAR3 ?VAR2)
        (not
          (orientation ?VAR2 ?VAR1 Inside)))
      (not
        (objectTransferred ?VAR3 ?VAR1)))
    (not
      (instance ?VAR3 Transfer)))) [2] flattening

4. (forall (?VAR1 ?VAR2 ?VAR3)
  (or
    (or
      (or
        (not
          (orientation ?VAR3 ?VAR2 Inside))
        (not
          (objectTransferred ?VAR1 ?VAR2)))
      (not
        (instance ?VAR1 Transfer)))
    (objectTransferred ?VAR1 ?VAR3))) [3] cnf_transformation

5. (orientation sK2 sK1 Inside) [] cnf_transformation

6. (forall (?VAR1)
  (or
    (or
      (objectTransferred ?VAR1 sK2)
      (not
        (instance ?VAR1 Transfer)))
    (not
      (objectTransferred ?VAR1 sK1)))) [4, 5] resolution

7. (agent sK0 John) [] cnf_transformation

8. (not
  (exists (?VAR1 ?VAR2)
    (and
      (and
        (and
          (objectTransferred ?VAR1 ?VAR2)
          (instance ?VAR2 Flower))
        (agent ?VAR1 John))
      (instance ?VAR1 Carrying)))) [] negated_conjecture

9. (forall (?VAR1 ?VAR2)
  (or
    (or
      (or
        (not
          (objectTransferred ?VAR1 ?VAR2))
        (not
          (instance ?VAR2 Flower)))
      (not
        (agent ?VAR1 John)))
    (not
      (instance ?VAR1 Carrying)))) [8] ennf_transformation

10. (forall (?VAR1 ?VAR2)
  (or
    (or
      (or
        (not
          (agent ?VAR1 John))
        (not
          (instance ?VAR1 Carrying)))
      (not
        (instance ?VAR2 Flower)))
    (not
      (objectTransferred ?VAR1 ?VAR2)))) [9] cnf_transformation

11. (forall (?VAR1)
  (or
    (or
      (not
        (instance sK0 Carrying))
      (not
        (instance ?VAR1 Flower)))
    (not
      (objectTransferred sK0 ?VAR1)))) [7, 10] resolution

12. (forall (?VAR1)
  (or
    (not
      (objectTransferred sK0 ?VAR1))
    (not
      (instance ?VAR1 Flower)))) [11] subsumption_resolution

13. (or
  (or
    (not
      (instance sK0 Transfer))
    (not
      (objectTransferred sK0 sK1)))
  (not
    (instance sK2 Flower))) [6, 12] resolution

14. (forall (?VAR1 ?VAR2 ?VAR3)
  (=>
    (and
      (instance ?VAR3 ?VAR2)
      (subclass ?VAR2 ?VAR1))
    (instance ?VAR3 ?VAR1))) [] kb_SUMO_6

15. (forall (?VAR1 ?VAR2 ?VAR3)
  (or
    (instance ?VAR3 ?VAR1)
    (not
      (instance ?VAR3 ?VAR2))
    (not
      (subclass ?VAR2 ?VAR1)))) [14] ennf_transformation

16. (forall (?VAR1 ?VAR2 ?VAR3)
  (or
    (or
      (instance ?VAR3 ?VAR1)
      (not
        (instance ?VAR3 ?VAR2)))
    (not
      (subclass ?VAR2 ?VAR1)))) [15] flattening

17. (forall (?VAR1 ?VAR2 ?VAR3)
  (or
    (or
      (not
        (subclass ?VAR3 ?VAR2))
      (not
        (instance ?VAR1 ?VAR3)))
    (instance ?VAR1 ?VAR2))) [16] cnf_transformation

18. (subclass Carrying Transfer) [] kb_SUMO_159

19. (forall (?VAR1)
  (or
    (not
      (instance ?VAR1 Carrying))
    (instance ?VAR1 Transfer))) [17, 18] resolution

20. (instance sK0 Carrying) [] cnf_transformation

21. (instance sK0 Transfer) [19, 20] resolution

22. (or
  (not
    (objectTransferred sK0 sK1))
  (not
    (instance sK2 Flower))) [13, 21] subsumption_resolution

23. (objectTransferred sK0 sK1) [] cnf_transformation

24. (not
  (instance sK2 Flower)) [22, 23] subsumption_resolution

25. (exists (?VAR1 ?VAR2 ?VAR3)
  (and
    (and
      (and
        (and
          (and
            (orientation ?VAR3 ?VAR2 Inside)
            (instance ?VAR2 Container))
          (instance ?VAR3 Flower))
        (agent ?VAR1 John))
      (objectTransferred ?VAR1 ?VAR2))
    (instance ?VAR1 Carrying))) [] kb_SUMO_12

26. (instance sK2 Flower) [25] cnf_transformation

27. false [24, 26] subsumption_resolution


 (5) John jumps from a ledge to a trampoline.  The ledge is higher than the trampoline.  Does John wind up higher than the ledge?

 (6) A bookcase is on the floor.  A book is on the bookcase.  Is the book higher than the floor?

(exists (?B ?F ?BOOK)
  (and
    (instance ?BOOK Book)
    (instance ?B Furniture)
    (instance ?F Floor)
    (orientation ?B ?F On)
    (orientation ?BOOK ?B On)))

(subclass TransitivePositionalAttribute PositionalAttribute)

(=>
  (and
    (orientation ?A ?B ?P)
    (orientation ?B ?C ?P)
    (instance ?P TransitivePositionalAttribute))
  (orientation ?A ?C ?P))

(=>
  (and
    (orientation ?A ?B On)
    (orientation ?B ?C On))
  (orientation ?A ?C Above))

query: (orientation ?BOOK ?F Above)

 (7) Pittsburgh is north of Washington, DC.  New York City is north of Pittsburgh.  Is New York City north of Washington, DC?

 (8) Bob and Jane are at the mouth of a tunnel.  Bob travels through the tunnel.  Can Bob be closer to Jane than the length of the tunnel?

 (9) John is 6' tall.  John's feet are on the floor.  How far is John's head from the floor?

 (10) John is 6' tall.  John is lying on the floor.  How far is John's head from the floor?

 (11) John is carrying a box.  There is a book on the box.  What is John carrying?

 (12) Jane is standing in front of John.  A van is parked in front of John. John cannot see Jane.  Is the van in front of Jane?

(13) A is on the right of B
     C is on the left of B
     D is in front of C
     E is in front of B.
       Therefore D is on the left of E

       a. Left (x,y> & Front (z, x) + Left (front
       (z, x), y), where the right-hand side signifies
       “z is in front of x, all of which is on the left
       of y.”
       b. Left (x, y) & Front (z, y) + Left (x,
       front (z, y)), where the right-hand side signifies “x is on the left of z which is in front
       of y.”
       c. Left (x, y) & Left (u, z) -+ Left (x, left
       6J3 z)).
       d. Left (x, y) * Right ty, x).
       e. Left (front (x, y), z) + Left (x, z) &
       Left (y, z) & Front (x, y).
       J Left (x, front (v, z)) -+ Left (x, y) &
       Left (x, z) & Front (y, z).
       g. Left (x, left (y, z)) + Left (x, y) & Left
       (x, z) 8~ Left 01, z).
       h. Left (x, y) + - Right (x, y).
       i. Right (x, y) + - Left (x, y).

(14) John is outside a circle and then crosses the border of the circle.  Is he inside the circle?

(15) John is standing to the left of the platform and jumps over it.  Is he still to the left of the platform?

(16) Jane is looking at Mark and John.  Mark is to the left of John from her perspective.  Mary is also
looking at Mark and John and Mark appears to the right of John from her perspective.  Is John in between
Mary and Jane?

(17) A string passes through a ring.  If John picks up both ends of the string, does he lift the ring too?

(18) John holds one end of a string.  The other end is tied to a cart.  If the string is taut and John
pulls on his end, does the cart move?

(19)  Shakespeare road runs east to west.  City hall is south of Shakespeare road.  Tosh road runs
north to south and ends at Shakespeare road. Officer Perez is in Tosh St with City Hall to her right.
What direction is she facing?  answer: east
